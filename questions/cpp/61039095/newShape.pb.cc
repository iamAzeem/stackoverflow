// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: newShape.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "newShape.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace myProject {
namespace protobuf {

namespace {

const ::google::protobuf::Descriptor* NewShape_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewShape_reflection_ = NULL;
const ::google::protobuf::Descriptor* NewShape_Polygon_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewShape_Polygon_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* NewShape_Polygon_PolygonType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* NewShape_Shape_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewShape_Shape_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_newShape_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_newShape_2eproto() {
  protobuf_AddDesc_newShape_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "newShape.proto");
  GOOGLE_CHECK(file != NULL);
  NewShape_descriptor_ = file->message_type(0);
  static const int NewShape_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShape, shape_),
  };
  NewShape_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NewShape_descriptor_,
      NewShape::default_instance_,
      NewShape_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShape, _has_bits_[0]),
      -1,
      -1,
      sizeof(NewShape),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShape, _internal_metadata_),
      -1);
  NewShape_Polygon_descriptor_ = NewShape_descriptor_->nested_type(0);
  static const int NewShape_Polygon_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShape_Polygon, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShape_Polygon, point_),
  };
  NewShape_Polygon_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NewShape_Polygon_descriptor_,
      NewShape_Polygon::default_instance_,
      NewShape_Polygon_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShape_Polygon, _has_bits_[0]),
      -1,
      -1,
      sizeof(NewShape_Polygon),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShape_Polygon, _internal_metadata_),
      -1);
  NewShape_Polygon_PolygonType_descriptor_ = NewShape_Polygon_descriptor_->enum_type(0);
  NewShape_Shape_descriptor_ = NewShape_descriptor_->nested_type(1);
  static const int NewShape_Shape_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShape_Shape, polygon_),
  };
  NewShape_Shape_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NewShape_Shape_descriptor_,
      NewShape_Shape::default_instance_,
      NewShape_Shape_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShape_Shape, _has_bits_[0]),
      -1,
      -1,
      sizeof(NewShape_Shape),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewShape_Shape, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_newShape_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NewShape_descriptor_, &NewShape::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NewShape_Polygon_descriptor_, &NewShape_Polygon::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NewShape_Shape_descriptor_, &NewShape_Shape::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_newShape_2eproto() {
  delete NewShape::default_instance_;
  delete NewShape_reflection_;
  delete NewShape_Polygon::default_instance_;
  delete NewShape_Polygon_reflection_;
  delete NewShape_Shape::default_instance_;
  delete NewShape_Shape_reflection_;
}

void protobuf_AddDesc_newShape_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_newShape_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016newShape.proto\022\022myProject.protobuf\"\246\002\n"
    "\010NewShape\0221\n\005shape\030\002 \003(\0132\".myProject.pro"
    "tobuf.NewShape.Shape\032\246\001\n\007Polygon\022O\n\004type"
    "\030\001 \001(\01620.myProject.protobuf.NewShape.Pol"
    "ygon.PolygonType:\017POLY_TYPE_OUTER\022\021\n\005poi"
    "nt\030\002 \003(\rB\002\020\001\"7\n\013PolygonType\022\023\n\017POLY_TYPE"
    "_OUTER\020\001\022\023\n\017POLY_TYPE_INNER\020\002\032>\n\005Shape\0225"
    "\n\007polygon\030\001 \003(\0132$.myProject.protobuf.New"
    "Shape.Polygon", 333);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "newShape.proto", &protobuf_RegisterTypes);
  NewShape::default_instance_ = new NewShape();
  NewShape_Polygon::default_instance_ = new NewShape_Polygon();
  NewShape_Shape::default_instance_ = new NewShape_Shape();
  NewShape::default_instance_->InitAsDefaultInstance();
  NewShape_Polygon::default_instance_->InitAsDefaultInstance();
  NewShape_Shape::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_newShape_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_newShape_2eproto {
  StaticDescriptorInitializer_newShape_2eproto() {
    protobuf_AddDesc_newShape_2eproto();
  }
} static_descriptor_initializer_newShape_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* NewShape_Polygon_PolygonType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewShape_Polygon_PolygonType_descriptor_;
}
bool NewShape_Polygon_PolygonType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const NewShape_Polygon_PolygonType NewShape_Polygon::POLY_TYPE_OUTER;
const NewShape_Polygon_PolygonType NewShape_Polygon::POLY_TYPE_INNER;
const NewShape_Polygon_PolygonType NewShape_Polygon::PolygonType_MIN;
const NewShape_Polygon_PolygonType NewShape_Polygon::PolygonType_MAX;
const int NewShape_Polygon::PolygonType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewShape_Polygon::kTypeFieldNumber;
const int NewShape_Polygon::kPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewShape_Polygon::NewShape_Polygon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:myProject.protobuf.NewShape.Polygon)
}

void NewShape_Polygon::InitAsDefaultInstance() {
}

NewShape_Polygon::NewShape_Polygon(const NewShape_Polygon& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:myProject.protobuf.NewShape.Polygon)
}

void NewShape_Polygon::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NewShape_Polygon::~NewShape_Polygon() {
  // @@protoc_insertion_point(destructor:myProject.protobuf.NewShape.Polygon)
  SharedDtor();
}

void NewShape_Polygon::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NewShape_Polygon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewShape_Polygon::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewShape_Polygon_descriptor_;
}

const NewShape_Polygon& NewShape_Polygon::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_newShape_2eproto();
  return *default_instance_;
}

NewShape_Polygon* NewShape_Polygon::default_instance_ = NULL;

NewShape_Polygon* NewShape_Polygon::New(::google::protobuf::Arena* arena) const {
  NewShape_Polygon* n = new NewShape_Polygon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewShape_Polygon::Clear() {
// @@protoc_insertion_point(message_clear_start:myProject.protobuf.NewShape.Polygon)
  type_ = 1;
  point_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NewShape_Polygon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:myProject.protobuf.NewShape.Polygon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .myProject.protobuf.NewShape.Polygon.PolygonType type = 1 [default = POLY_TYPE_OUTER];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::myProject::protobuf::NewShape_Polygon_PolygonType_IsValid(value)) {
            set_type(static_cast< ::myProject::protobuf::NewShape_Polygon_PolygonType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_point;
        break;
      }

      // repeated uint32 point = 2 [packed = true];
      case 2: {
        if (tag == 18) {
         parse_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_point())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_point())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:myProject.protobuf.NewShape.Polygon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:myProject.protobuf.NewShape.Polygon)
  return false;
#undef DO_
}

void NewShape_Polygon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:myProject.protobuf.NewShape.Polygon)
  // optional .myProject.protobuf.NewShape.Polygon.PolygonType type = 1 [default = POLY_TYPE_OUTER];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // repeated uint32 point = 2 [packed = true];
  if (this->point_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_point_cached_byte_size_);
  }
  for (int i = 0; i < this->point_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->point(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:myProject.protobuf.NewShape.Polygon)
}

::google::protobuf::uint8* NewShape_Polygon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:myProject.protobuf.NewShape.Polygon)
  // optional .myProject.protobuf.NewShape.Polygon.PolygonType type = 1 [default = POLY_TYPE_OUTER];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // repeated uint32 point = 2 [packed = true];
  if (this->point_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _point_cached_byte_size_, target);
  }
  for (int i = 0; i < this->point_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->point(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myProject.protobuf.NewShape.Polygon)
  return target;
}

int NewShape_Polygon::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:myProject.protobuf.NewShape.Polygon)
  int total_size = 0;

  // optional .myProject.protobuf.NewShape.Polygon.PolygonType type = 1 [default = POLY_TYPE_OUTER];
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // repeated uint32 point = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->point_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->point(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _point_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewShape_Polygon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:myProject.protobuf.NewShape.Polygon)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NewShape_Polygon* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NewShape_Polygon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:myProject.protobuf.NewShape.Polygon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:myProject.protobuf.NewShape.Polygon)
    MergeFrom(*source);
  }
}

void NewShape_Polygon::MergeFrom(const NewShape_Polygon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myProject.protobuf.NewShape.Polygon)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  point_.MergeFrom(from.point_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NewShape_Polygon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:myProject.protobuf.NewShape.Polygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewShape_Polygon::CopyFrom(const NewShape_Polygon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myProject.protobuf.NewShape.Polygon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewShape_Polygon::IsInitialized() const {

  return true;
}

void NewShape_Polygon::Swap(NewShape_Polygon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewShape_Polygon::InternalSwap(NewShape_Polygon* other) {
  std::swap(type_, other->type_);
  point_.UnsafeArenaSwap(&other->point_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewShape_Polygon::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewShape_Polygon_descriptor_;
  metadata.reflection = NewShape_Polygon_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewShape_Shape::kPolygonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewShape_Shape::NewShape_Shape()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:myProject.protobuf.NewShape.Shape)
}

void NewShape_Shape::InitAsDefaultInstance() {
}

NewShape_Shape::NewShape_Shape(const NewShape_Shape& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:myProject.protobuf.NewShape.Shape)
}

void NewShape_Shape::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NewShape_Shape::~NewShape_Shape() {
  // @@protoc_insertion_point(destructor:myProject.protobuf.NewShape.Shape)
  SharedDtor();
}

void NewShape_Shape::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NewShape_Shape::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewShape_Shape::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewShape_Shape_descriptor_;
}

const NewShape_Shape& NewShape_Shape::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_newShape_2eproto();
  return *default_instance_;
}

NewShape_Shape* NewShape_Shape::default_instance_ = NULL;

NewShape_Shape* NewShape_Shape::New(::google::protobuf::Arena* arena) const {
  NewShape_Shape* n = new NewShape_Shape;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewShape_Shape::Clear() {
// @@protoc_insertion_point(message_clear_start:myProject.protobuf.NewShape.Shape)
  polygon_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NewShape_Shape::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:myProject.protobuf.NewShape.Shape)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .myProject.protobuf.NewShape.Polygon polygon = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_polygon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_polygon()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_polygon;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:myProject.protobuf.NewShape.Shape)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:myProject.protobuf.NewShape.Shape)
  return false;
#undef DO_
}

void NewShape_Shape::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:myProject.protobuf.NewShape.Shape)
  // repeated .myProject.protobuf.NewShape.Polygon polygon = 1;
  for (unsigned int i = 0, n = this->polygon_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->polygon(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:myProject.protobuf.NewShape.Shape)
}

::google::protobuf::uint8* NewShape_Shape::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:myProject.protobuf.NewShape.Shape)
  // repeated .myProject.protobuf.NewShape.Polygon polygon = 1;
  for (unsigned int i = 0, n = this->polygon_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->polygon(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myProject.protobuf.NewShape.Shape)
  return target;
}

int NewShape_Shape::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:myProject.protobuf.NewShape.Shape)
  int total_size = 0;

  // repeated .myProject.protobuf.NewShape.Polygon polygon = 1;
  total_size += 1 * this->polygon_size();
  for (int i = 0; i < this->polygon_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->polygon(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewShape_Shape::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:myProject.protobuf.NewShape.Shape)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NewShape_Shape* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NewShape_Shape>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:myProject.protobuf.NewShape.Shape)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:myProject.protobuf.NewShape.Shape)
    MergeFrom(*source);
  }
}

void NewShape_Shape::MergeFrom(const NewShape_Shape& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myProject.protobuf.NewShape.Shape)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  polygon_.MergeFrom(from.polygon_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NewShape_Shape::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:myProject.protobuf.NewShape.Shape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewShape_Shape::CopyFrom(const NewShape_Shape& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myProject.protobuf.NewShape.Shape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewShape_Shape::IsInitialized() const {

  return true;
}

void NewShape_Shape::Swap(NewShape_Shape* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewShape_Shape::InternalSwap(NewShape_Shape* other) {
  polygon_.UnsafeArenaSwap(&other->polygon_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewShape_Shape::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewShape_Shape_descriptor_;
  metadata.reflection = NewShape_Shape_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewShape::kShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewShape::NewShape()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:myProject.protobuf.NewShape)
}

void NewShape::InitAsDefaultInstance() {
}

NewShape::NewShape(const NewShape& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:myProject.protobuf.NewShape)
}

void NewShape::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NewShape::~NewShape() {
  // @@protoc_insertion_point(destructor:myProject.protobuf.NewShape)
  SharedDtor();
}

void NewShape::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NewShape::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewShape::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewShape_descriptor_;
}

const NewShape& NewShape::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_newShape_2eproto();
  return *default_instance_;
}

NewShape* NewShape::default_instance_ = NULL;

NewShape* NewShape::New(::google::protobuf::Arena* arena) const {
  NewShape* n = new NewShape;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewShape::Clear() {
// @@protoc_insertion_point(message_clear_start:myProject.protobuf.NewShape)
  shape_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NewShape::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:myProject.protobuf.NewShape)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .myProject.protobuf.NewShape.Shape shape = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_shape:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_shape()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_shape;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:myProject.protobuf.NewShape)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:myProject.protobuf.NewShape)
  return false;
#undef DO_
}

void NewShape::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:myProject.protobuf.NewShape)
  // repeated .myProject.protobuf.NewShape.Shape shape = 2;
  for (unsigned int i = 0, n = this->shape_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->shape(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:myProject.protobuf.NewShape)
}

::google::protobuf::uint8* NewShape::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:myProject.protobuf.NewShape)
  // repeated .myProject.protobuf.NewShape.Shape shape = 2;
  for (unsigned int i = 0, n = this->shape_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->shape(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myProject.protobuf.NewShape)
  return target;
}

int NewShape::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:myProject.protobuf.NewShape)
  int total_size = 0;

  // repeated .myProject.protobuf.NewShape.Shape shape = 2;
  total_size += 1 * this->shape_size();
  for (int i = 0; i < this->shape_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->shape(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewShape::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:myProject.protobuf.NewShape)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NewShape* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NewShape>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:myProject.protobuf.NewShape)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:myProject.protobuf.NewShape)
    MergeFrom(*source);
  }
}

void NewShape::MergeFrom(const NewShape& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myProject.protobuf.NewShape)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  shape_.MergeFrom(from.shape_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void NewShape::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:myProject.protobuf.NewShape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewShape::CopyFrom(const NewShape& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myProject.protobuf.NewShape)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewShape::IsInitialized() const {

  return true;
}

void NewShape::Swap(NewShape* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewShape::InternalSwap(NewShape* other) {
  shape_.UnsafeArenaSwap(&other->shape_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewShape::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewShape_descriptor_;
  metadata.reflection = NewShape_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewShape_Polygon

// optional .myProject.protobuf.NewShape.Polygon.PolygonType type = 1 [default = POLY_TYPE_OUTER];
bool NewShape_Polygon::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NewShape_Polygon::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void NewShape_Polygon::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void NewShape_Polygon::clear_type() {
  type_ = 1;
  clear_has_type();
}
 ::myProject::protobuf::NewShape_Polygon_PolygonType NewShape_Polygon::type() const {
  // @@protoc_insertion_point(field_get:myProject.protobuf.NewShape.Polygon.type)
  return static_cast< ::myProject::protobuf::NewShape_Polygon_PolygonType >(type_);
}
 void NewShape_Polygon::set_type(::myProject::protobuf::NewShape_Polygon_PolygonType value) {
  assert(::myProject::protobuf::NewShape_Polygon_PolygonType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:myProject.protobuf.NewShape.Polygon.type)
}

// repeated uint32 point = 2 [packed = true];
int NewShape_Polygon::point_size() const {
  return point_.size();
}
void NewShape_Polygon::clear_point() {
  point_.Clear();
}
 ::google::protobuf::uint32 NewShape_Polygon::point(int index) const {
  // @@protoc_insertion_point(field_get:myProject.protobuf.NewShape.Polygon.point)
  return point_.Get(index);
}
 void NewShape_Polygon::set_point(int index, ::google::protobuf::uint32 value) {
  point_.Set(index, value);
  // @@protoc_insertion_point(field_set:myProject.protobuf.NewShape.Polygon.point)
}
 void NewShape_Polygon::add_point(::google::protobuf::uint32 value) {
  point_.Add(value);
  // @@protoc_insertion_point(field_add:myProject.protobuf.NewShape.Polygon.point)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
NewShape_Polygon::point() const {
  // @@protoc_insertion_point(field_list:myProject.protobuf.NewShape.Polygon.point)
  return point_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
NewShape_Polygon::mutable_point() {
  // @@protoc_insertion_point(field_mutable_list:myProject.protobuf.NewShape.Polygon.point)
  return &point_;
}

// -------------------------------------------------------------------

// NewShape_Shape

// repeated .myProject.protobuf.NewShape.Polygon polygon = 1;
int NewShape_Shape::polygon_size() const {
  return polygon_.size();
}
void NewShape_Shape::clear_polygon() {
  polygon_.Clear();
}
const ::myProject::protobuf::NewShape_Polygon& NewShape_Shape::polygon(int index) const {
  // @@protoc_insertion_point(field_get:myProject.protobuf.NewShape.Shape.polygon)
  return polygon_.Get(index);
}
::myProject::protobuf::NewShape_Polygon* NewShape_Shape::mutable_polygon(int index) {
  // @@protoc_insertion_point(field_mutable:myProject.protobuf.NewShape.Shape.polygon)
  return polygon_.Mutable(index);
}
::myProject::protobuf::NewShape_Polygon* NewShape_Shape::add_polygon() {
  // @@protoc_insertion_point(field_add:myProject.protobuf.NewShape.Shape.polygon)
  return polygon_.Add();
}
::google::protobuf::RepeatedPtrField< ::myProject::protobuf::NewShape_Polygon >*
NewShape_Shape::mutable_polygon() {
  // @@protoc_insertion_point(field_mutable_list:myProject.protobuf.NewShape.Shape.polygon)
  return &polygon_;
}
const ::google::protobuf::RepeatedPtrField< ::myProject::protobuf::NewShape_Polygon >&
NewShape_Shape::polygon() const {
  // @@protoc_insertion_point(field_list:myProject.protobuf.NewShape.Shape.polygon)
  return polygon_;
}

// -------------------------------------------------------------------

// NewShape

// repeated .myProject.protobuf.NewShape.Shape shape = 2;
int NewShape::shape_size() const {
  return shape_.size();
}
void NewShape::clear_shape() {
  shape_.Clear();
}
const ::myProject::protobuf::NewShape_Shape& NewShape::shape(int index) const {
  // @@protoc_insertion_point(field_get:myProject.protobuf.NewShape.shape)
  return shape_.Get(index);
}
::myProject::protobuf::NewShape_Shape* NewShape::mutable_shape(int index) {
  // @@protoc_insertion_point(field_mutable:myProject.protobuf.NewShape.shape)
  return shape_.Mutable(index);
}
::myProject::protobuf::NewShape_Shape* NewShape::add_shape() {
  // @@protoc_insertion_point(field_add:myProject.protobuf.NewShape.shape)
  return shape_.Add();
}
::google::protobuf::RepeatedPtrField< ::myProject::protobuf::NewShape_Shape >*
NewShape::mutable_shape() {
  // @@protoc_insertion_point(field_mutable_list:myProject.protobuf.NewShape.shape)
  return &shape_;
}
const ::google::protobuf::RepeatedPtrField< ::myProject::protobuf::NewShape_Shape >&
NewShape::shape() const {
  // @@protoc_insertion_point(field_list:myProject.protobuf.NewShape.shape)
  return shape_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace myProject

// @@protoc_insertion_point(global_scope)
